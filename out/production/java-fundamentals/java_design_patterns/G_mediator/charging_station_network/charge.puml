@startuml


interface ChargingStationMediatorI {
    double calcDeltaSocPerSlot();
    Informer getInformer();
}

class ChargingStation {
    Network network;  //mediator
    List<ChargingSlot> slots;
    Queue<Vehicle> vehiclesInQueue;
    PowerSplitter powerSplitter;
    VehicleMover mover;
    VehicleCharger charger;
    Informer informer;
}

note right of ChargingStation
 For ex does addArrivedVehicle() call vehiclesInQueue and
 the colleagues slots (list of Charging slot). When calling
 chargeVehicles(), a slot object will need to call
 calcDeltaSocPerSlot in its network.
 It is hande that all objects has access to the informer
end note

 class ChargingSlot<network access> {
    ChargingStationMediatorI mediator;

    Vehicle occupVehicle;

    boolean isAvailable()
    void parkVehicle(Vehicle vehicle)
    :
}

 class PowerSplitter <network acces> {
    ChargingStationMediatorI mediator;

    double deltaSocPerSlot()
    }

class Informer {

    List<ChargingSlot> slots;
    Queue<Vehicle> vehiclesInQueue;
    double deltaSoCDepotMax;

     int nOccupiedSlots()
     boolean isAllSlotsOccupied()
     List<Double> getSocs()
     int nofSlots()
     int nofVehiclesInQueue()
    }


class Vehicle {
      String id;
      double soc;

      void  charge(double deltaSoc)
 }

ChargingStationMediatorI <|-- ChargingStation
ChargingStation <-- PowerSplitter
ChargingStation "1" *-d- "many" ChargingSlot

@enduml